{"version":3,"sources":["video.tsx","index.tsx"],"names":["Video","props","elementRef","useRef","useEffect","stream","volumeValue","volume","current","srcObject","console","log","id","controls","className","ref","width","height","autoPlay","muted","playsInline","roomId","roomFromUrl","search","window","location","results","RegExp","exec","room","getRoomFromUrl","signalingKey","keyFromUrl","key","getKeyFromUrl","App","localStream","peer","state","playing","connected","remoteStreams","startVideo","bind","stopVideoHandler","stopVideo","connect","disconnect","handleRoomChange","handleKeyChange","addRemoteStream","removeRemoteStream","removeAllRemoteStream","this","e","preventDefault","warn","navigator","mediaDevices","getUserMedia","video","audio","then","setState","catch","err","error","getTracks","forEach","track","stop","Peer","debug","on","joinRoom","mode","peerId","handleDisconnect","close","target","value","clonedStreams","Object","assign","remoteVideos","keys","push","onClick","disabled","type","size","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d2549f5.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport './video.css';\n\n// ------ Video Component ------\ninterface VideoPropsInterface {\n  children: never[];\n  volume?: number;\n  stream: MediaStream | null;\n  id: string;\n  controls?: boolean;\n  width: string;\n  height: string;\n}\n\n\nfunction Video(props: VideoPropsInterface) {\n  const elementRef = useRef<HTMLVideoElement>(null);\n\n  useEffect(() => {\n    const stream = props.stream;\n    let volumeValue = 0;\n    if (props.volume) {\n      volumeValue = props.volume;\n    }\n\n    const current: HTMLVideoElement | null = elementRef.current;\n    if (current != null) {\n      if (current.srcObject === stream) {\n        console.log('useEffect() same stream, so skip:', stream);\n      }\n      else {\n        current.srcObject = stream;\n        console.log('useEffect() set stream:', stream);\n      }\n\n      current.volume = volumeValue;\n    }\n    else {\n      console.log('useEffect() ref.current NULL');\n    }\n\n  });\n\n  console.log('Video rendering, id=%s', props.id);\n  const controls = props.controls;\n  if (controls) {\n    return (\n      <video className=\"video_with_border\" ref={elementRef} id={props.id} width={props.width} height={props.height} autoPlay muted playsInline controls ></video>\n    );\n  }\n  else {\n    return (\n      <video className=\"video_with_border\" ref={elementRef} id={props.id} width={props.width} height={props.height} autoPlay muted playsInline ></video>\n    );\n  }\n}\n\nexport default Video;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Video from './video'; // video.js\nimport Peer from 'skyway-js';\nimport { MouseEvent } from 'react';\n\nimport './index.css';\n\n// ----\n// TODO\n// ----\n\nconst appKey = '';\n\n// ------ params -----\nlet roomId = 'skyway-test';\nconst roomFromUrl = getRoomFromUrl();\nif (roomFromUrl && (roomFromUrl !== '')) {\n  roomId = roomFromUrl;\n}\nlet signalingKey = appKey; //'';\nconst keyFromUrl = getKeyFromUrl();\nif (keyFromUrl && (keyFromUrl !== '')) {\n  signalingKey = keyFromUrl;\n}\n\n// ---- URL ----\nfunction getRoomFromUrl(): string {\n  const search = window.location.search;\n  const re = new RegExp('room=([^&=]+)');\n  const results = re.exec(search);\n  let room = '';\n  if (results) {\n    room = results[1];\n  }\n  return room;\n}\n\nfunction getKeyFromUrl(): string | null {\n  const search = window.location.search;\n  const re = new RegExp('key=([^&=]+)');\n  const results = re.exec(search);\n  let key = null;\n  if (results) {\n    key = results[1];\n  }\n  return key;\n}\n\n// --- Skyway -----\nconst debug = 2;\n\ninterface SkywayMediaStream extends MediaStream {\n  peerId: string;\n}\n\n\n\n// ------ App class ------\ninterface SkywayAppStateInterface {\n  playing: boolean;\n  connected: boolean;\n  roomId: string;\n  signalingKey: string;\n  //videoCodec: VideoCodecType;\n  remoteStreams: { [key: string]: SkywayMediaStream; }\n}\n\nclass App extends React.Component {\n  localStream: MediaStream | null;\n  room: any;\n  peer: any;\n  state: SkywayAppStateInterface;\n\n  constructor(props: object) {\n    super(props);\n    this.localStream = null;\n    this.state = {\n      playing: false,\n      connected: false,\n      roomId: roomId,\n      signalingKey: signalingKey,\n      //videoCodec: 'VP9',\n      remoteStreams: {},\n    };\n\n    // This binding is necessary to make `this` work in the callback\n    this.startVideo = this.startVideo.bind(this);\n    this.stopVideoHandler = this.stopVideoHandler.bind(this);\n    this.stopVideo = this.stopVideo.bind(this);\n    this.connect = this.connect.bind(this);\n    this.disconnect = this.disconnect.bind(this);\n    this.handleRoomChange = this.handleRoomChange.bind(this);\n    this.handleKeyChange = this.handleKeyChange.bind(this);\n    //this.handleCodecChange = this.handleCodecChange.bind(this);\n    this.addRemoteStream = this.addRemoteStream.bind(this);\n    this.removeRemoteStream = this.removeRemoteStream.bind(this);\n    this.removeAllRemoteStream = this.removeAllRemoteStream.bind(this);\n\n    // -- Skyway connection --\n    this.room = null;\n    this.peer = null;\n  }\n\n  componentDidMount() {\n    console.log('App DidMound()');\n  }\n\n  componentWillUnmount() {\n    console.log('App WillUnmount()');\n    if (this.localStream) {\n      this.stopVideo();\n    }\n  }\n\n  // -----------\n  startVideo(e: MouseEvent<HTMLButtonElement>) {\n    e.preventDefault();\n    console.log('start Video');\n    if (this.localStream) {\n      console.warn('localVideo ALREADY started');\n      return;\n    }\n\n    const constraints = { video: true, audio: true };\n    navigator.mediaDevices.getUserMedia(constraints)\n      .then(stream => {\n        this.localStream = stream;\n        this.setState({ playing: true });\n      })\n      .catch(err => console.error('media ERROR:', err));\n  }\n\n  stopVideoHandler(e: MouseEvent<HTMLButtonElement>) {\n    e.preventDefault();\n    console.log('stop Video');\n    this.stopVideo();\n  }\n\n  stopVideo() {\n    if (this.localStream) {\n      this.localStream.getTracks().forEach(track => track.stop());\n      this.localStream = null;\n      this.setState({ playing: false });\n    }\n  }\n\n  // -----------------\n  connect(e: MouseEvent<HTMLButtonElement>) {\n    e.preventDefault();\n    console.log('connect');\n    if (this.room) {\n      console.warn('ALREADY connected');\n      return;\n    }\n\n    // const options = {\n    //   audio: true,\n    //   multistream: true,\n    //   video: true,\n    //   videoCodecType: this.state.videoCodec,\n    //   videoBitRate: 1000,\n    // };\n\n    console.log('connecting roomId=%s key=%s', this.state.roomId, this.state.signalingKey);\n    this.peer = new Peer({\n      key: this.state.signalingKey,\n      debug: debug\n    });\n    this.peer.on('open', () => {\n      console.log('peer open. id=', this.peer.id);\n      this.joinRoom();\n    });\n    this.peer.on('error', console.error);\n  }\n\n  joinRoom() {\n    const room = this.peer.joinRoom(this.state.roomId, {\n      mode: 'sfu',\n      stream: this.localStream,\n    });\n    room.on('open', () => {\n      console.log('room open');\n      this.setState({ connected: true });\n    });\n    room.on('peerJoin', (peerId: string) => {\n      console.log(`= new Peer id=${peerId} joined ===`)\n    });\n\n    room.on('stream', (stream: SkywayMediaStream) => {\n      console.log('addstream id=%s', stream.id, stream.peerId);\n\n      // --- for multi stream ---\n      const id = 'remote_' + stream.peerId;\n      this.addRemoteStream(id, stream);\n    });\n\n    room.on('peerLeave', (peerId: string) => {\n      console.log('peerLeave peerId=%s', peerId);\n\n      // --- for multi stream ---\n      const id = 'remote_' + peerId;\n      this.removeRemoteStream(id);\n    });\n\n    room.on('close', () => {\n      console.log('room closed');\n      //this.handleDisconnect();\n    });\n\n    this.room = room;\n  }\n\n  disconnect(e: MouseEvent<HTMLButtonElement>) {\n    e.preventDefault();\n    console.log('disconnect');\n    this.handleDisconnect();\n  }\n\n  handleDisconnect() {\n    if (this.room) {\n      this.room.close();\n      this.room = null;\n    }\n    if (this.localStream) {\n      this.localStream.getTracks().forEach(track => track.stop());\n      this.localStream = null;\n      this.setState({ playing: false });\n    }\n\n    this.removeAllRemoteStream();\n    this.setState({ connected: false });\n  }\n\n  handleRoomChange(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({ roomId: e.target.value });\n  }\n\n  handleKeyChange(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({ signalingKey: e.target.value });\n  }\n\n  // handleCodecChange(e) {\n  //   this.setState({ videoCodec: e.target.value });\n  // }\n\n  addRemoteStream(id: string, stream: SkywayMediaStream) {\n    const clonedStreams = Object.assign({}, this.state.remoteStreams);\n    clonedStreams[id] = stream;\n    this.setState({ remoteStreams: clonedStreams });\n  }\n\n  removeRemoteStream(id: string) {\n    const clonedStreams = Object.assign({}, this.state.remoteStreams);\n    delete clonedStreams[id];\n    this.setState({ remoteStreams: clonedStreams });\n  }\n\n  removeAllRemoteStream() {\n    const newStreams = {};\n    this.setState({ remoteStreams: newStreams });\n  }\n\n  // -----------------\n  render() {\n    console.log('App render()');\n\n    const remoteVideos: JSX.Element[] = [];\n    //Object.keys(this.state.remoteStreams).forEach(function (key) {\n    Object.keys(this.state.remoteStreams).forEach(function (this: { [key: string]: SkywayMediaStream; }, key: string) {\n      const stream: SkywayMediaStream = this[key]; // this は this.state.remoteStream\n      console.log('key=id=%s, stream.id=%s', key, stream.id);\n      remoteVideos.push(\n        <Video id={key} key={key} width={\"320px\"} height={\"240px\"} volume={0.5} controls={true} stream={stream}>\n        </Video>\n      );\n    }, this.state.remoteStreams);\n\n    return (\n      <div className=\"App\" >\n        React - Skyway example<br />\n        { /*Video Codec:\n        <select value={this.state.videoCodec} onChange={this.handleCodecChange} disabled={this.state.connected} >\n          <option value=\"VP8\">VP8</option>\n          <option value=\"VP9\">VP9</option>\n          <option value=\"H264\">H264</option>\n          <option value=\"H265\">H265</option>\n        </select>\n        &nbsp;*/ }\n        <button onClick={this.startVideo} disabled={this.state.playing || this.state.connected}> Start Video</button >\n        <button onClick={this.stopVideo} disabled={!this.state.playing || this.state.connected}>Stop Video</button>\n        <br />\n        API Key: <input id=\"signaling_key\" type=\"text\" size={32} value={this.state.signalingKey} onChange={this.handleKeyChange} disabled={this.state.connected}></input>\n        <br />\n        Room: <input id=\"room_id\" type=\"text\" value={this.state.roomId} onChange={this.handleRoomChange} disabled={this.state.connected}></input>\n        <button onClick={this.connect} disabled={this.state.connected || !this.state.playing}> Connect</button >\n        <button onClick={this.disconnect} disabled={!this.state.connected}>Disconnect</button>\n        <br />\n        <div className=\"VideoContainer\">\n          <Video id={\"local_video\"} width={\"160px\"} height={\"120px\"} stream={this.localStream}>\n          </Video>\n          <div className=\"RemoteContainer\">\n            {remoteVideos}\n          </div>\n        </div>\n      </div >\n    );\n  }\n}\n\n// ====================== ReactDOM rendering ====================\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}